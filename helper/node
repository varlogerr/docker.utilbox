#!/bin/bash

: ${NODEV:=8.9}

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
image_tag="varlog/dockerutil_nodejs"
the_user="nodejs"
the_group=${the_user}
the_home=/home/${the_user}
context_dir="${script_dir}/../docker/nodejs"
mount_dir="${script_dir}/../mounts/nodejs"
mount_cache_dir="${mount_dir}/.cache"
mount_alias_dir="${mount_dir}/alias"
mount_versions_dir="${mount_dir}/versions"
mount_config_dir="${mount_dir}/configstore"
cache_dir="${the_home}/.nvm/.cache"
alias_dir="${the_home}/.nvm/alias"
versions_dir="${the_home}/.nvm/versions"
config_dir="${the_home}/.config/configstore"
src_dir="${the_home}/app"
env_file_path=$(pwd)/.env

if [[ "$(docker images -q ${image_tag} 2> /dev/null)" == "" ]]; then
    echo "Building image..."
    docker build -t ${image_tag} \
        --build-arg THE_USER=${the_user} \
        --build-arg THE_GROUP=${the_group} \
        --build-arg THE_HOME=${the_home} \
        --no-cache \
        ${context_dir}

    docker run -it --rm \
        -v ${mount_cache_dir}:${cache_dir} \
        -v ${mount_alias_dir}:${alias_dir} \
        -v ${mount_versions_dir}:${versions_dir} \
        -v ${mount_config_dir}:${config_dir} \
        ${image_tag} \
        /bin/bash -c "chown ${the_user}:${the_group} ${cache_dir} \
                   && chown ${the_user}:${the_group} ${alias_dir} \
                   && chown ${the_user}:${the_group} ${versions_dir} \
                   && chown ${the_user}:${the_group} ${config_dir}"
fi

if [ ! -f ${env_file_path} ]
then
    docker run -it --rm \
        -e "NODEV=${NODEV}" \
        -v ${mount_cache_dir}:${cache_dir} \
        -v ${mount_alias_dir}:${alias_dir} \
        -v ${mount_versions_dir}:${versions_dir} \
        -v ${mount_config_dir}:${config_dir} \
        -v $(pwd):${src_dir} \
        -w ${src_dir} \
        -u ${the_user} \
        ${image_tag} $@
else
    docker run -it --rm \
        --env-file=${env_file_path} \
        -e "NODEV=${NODEV}" \
        -v ${mount_cache_dir}:${cache_dir} \
        -v ${mount_alias_dir}:${alias_dir} \
        -v ${mount_versions_dir}:${versions_dir} \
        -v ${mount_config_dir}:${config_dir} \
        -v $(pwd):${src_dir} \
        -w ${src_dir} \
        -u ${the_user} \
        ${image_tag} $@
fi