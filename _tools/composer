#!/bin/bash

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "${script_dir}/.docker.utilbox-utilbox_dir"
context_dir="${utilbox_dir}/docker/composer"
mount_dir="${utilbox_dir}/mounts/composer"
env_file_path=$(pwd)/.env

the_user="composer"
the_group=${the_user}
the_home="/home/${the_user}"
image_tag="varlog/dockerutil_composer"
composer_dir="${the_home}/cache"
src_dir="${the_home}/app"

if [[ "$(docker images -q ${image_tag} 2> /dev/null)" == "" ]]; then
    echo "Building image..."
    docker build -t ${image_tag} \
        --build-arg THE_USER=${the_user} \
        --build-arg THE_GROUP=${the_group} \
        --build-arg THE_HOME=${the_home} \
        --no-cache \
        $context_dir

    docker run -it --rm \
        -e "COMPOSER_HOME=${composer_dir}" \
        -v ${mount_dir}:${composer_dir} \
        ${image_tag} \
        /bin/bash -c "chown ${the_user}:${the_group} ${composer_dir}"
fi

if [ ! -f ${env_file_path} ]
then
    docker run -it --rm \
        -e "COMPOSER_HOME=${composer_dir}" \
        -v $(pwd):${src_dir} \
        -v ${mount_dir}:${composer_dir} \
        -w ${src_dir} \
        -u ${the_user} \
        ${image_tag} $@
else
    docker run -it --rm \
        --env-file=${env_file_path} \
        -e "COMPOSER_HOME=${composer_dir}" \
        -v $(pwd):${src_dir} \
        -v ${mount_dir}:${composer_dir} \
        -w ${src_dir} \
        -u ${the_user} \
        ${image_tag} $@
fi
